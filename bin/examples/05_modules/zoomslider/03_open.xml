<?xml version="1.0" encoding="utf-8" ?>
<!--
	You can set module as closed by default, and open/close it by calling proper functions.
	Assign actions that will be executed whenever ZoomSlider changes "open" state,
	so this change could be reflected in your interface, for example by changing state of buttons.
	
	http://panozona.com/wiki/Module:ZoomSlider
-->
<SaladoPlayer>
	<global debug="true">
		<trace open="true"/>
	</global>
	<panoramas>
		<panorama id="yellowChecker" path="~panoramas/dz_yellow_check/yellow_check_f.xml">
			<image id="bc_greenArrow" path="~hotspots/images/green_arrow.png" location="pan:-5,tilt:5" mouse="onClick:openSlider"/>
			<image id="bc_redArrow" path="~hotspots/images/red_arrow.png" location="pan:-5,tilt:-5" mouse="onClick:closeSlider"/>
			<image id="bc_yellowArrow" path="~hotspots/images/yellow_arrow.png" location="pan:5" mouse="onClick:toggleOpenSlider"/>
		</panorama>
	</panoramas>
	<modules>
		<ZoomSlider path="~modules/ZoomSlider-1.0.swf">
			<window onOpen="printOpen" onClose="printClose"/>
			<slider path="~modules/images/zoomslider/elements_30x30.png"/>
		</ZoomSlider>
	</modules>
	<actions>
		<action id="openSlider" content="ZoomSlider.setOpen(true)"/>
		<action id="closeSlider" content="ZoomSlider.setOpen(false)"/>
		<action id="toggleOpenSlider" content="ZoomSlider.toggleOpen()"/>
		<action id="printOpen" content="SaladoPlayer.print(slider opened)"/>
		<action id="printClose" content="SaladoPlayer.print(slider closed)"/>
	</actions>
</SaladoPlayer>